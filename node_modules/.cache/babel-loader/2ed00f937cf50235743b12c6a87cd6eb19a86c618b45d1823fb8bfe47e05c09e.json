{"ast":null,"code":"import{useEffect}from\"react\";import{useInView}from\"react-intersection-observer\";/**\n * This hook will take a function, and returns a ref.\n * ref can be assigned to any JSX element as prop, and\n * when the element reaches 50% of the viewport, the passed\n * in function will be called with the element id as parameter.\n * @param {function} action \n * @returns {funciton} ref\n */export default function useScrollObserver(action){const{ref,inView,entry}=useInView({rootMargin:'-50% 0% -50% 0%'});useEffect(()=>{if(entry&&inView){action(entry.target.id);}},[entry,action,inView]);return ref;}","map":{"version":3,"names":["useEffect","useInView","useScrollObserver","action","ref","inView","entry","rootMargin","target","id"],"sources":["/Users/joyceye/Documents/personal_portfolio/src/hooks/useScrollObserver.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\n\n/**\n * This hook will take a function, and returns a ref.\n * ref can be assigned to any JSX element as prop, and\n * when the element reaches 50% of the viewport, the passed\n * in function will be called with the element id as parameter.\n * @param {function} action \n * @returns {funciton} ref\n */\nexport default function useScrollObserver(action) {\n    const {ref, inView, entry} = useInView({\n        rootMargin: '-50% 0% -50% 0%'\n    })\n    useEffect(() => {\n        if (entry && inView) {\n            action(entry.target.id);\n        }\n    }, [entry, action, inView])\n    return ref\n}"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,SAAS,KAAQ,6BAA6B,CAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAAS,CAAAC,iBAAiBA,CAACC,MAAM,CAAE,CAC9C,KAAM,CAACC,GAAG,CAAEC,MAAM,CAAEC,KAAK,CAAC,CAAGL,SAAS,CAAC,CACnCM,UAAU,CAAE,iBAChB,CAAC,CAAC,CACFP,SAAS,CAAC,IAAM,CACZ,GAAIM,KAAK,EAAID,MAAM,CAAE,CACjBF,MAAM,CAACG,KAAK,CAACE,MAAM,CAACC,EAAE,CAAC,CAC3B,CACJ,CAAC,CAAE,CAACH,KAAK,CAAEH,MAAM,CAAEE,MAAM,CAAC,CAAC,CAC3B,MAAO,CAAAD,GAAG,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}